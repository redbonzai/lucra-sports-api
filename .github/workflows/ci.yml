name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install

      - name: Wait for PostgreSQL to be ready
        run: |
          until PGPASSWORD=local psql -h localhost -U local -c '\q'; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 1
          done
          echo "PostgreSQL is up - continuing"

      - name: Lint codebase
        run: yarn lint

      - name: Build the project
        run: yarn build

      - name: Run unit tests
        run: yarn test

      - name: Run E2E tests
        run: yarn test:e2e

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose -f docker-compose.yml down

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
